[{"/Users/fahimfaysalsiyam/Desktop/client/src/index.js":"1","/Users/fahimfaysalsiyam/Desktop/client/src/App.js":"2"},{"size":199,"mtime":1677905801217,"results":"3","hashOfConfig":"4"},{"size":2464,"mtime":1677905900182,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"75e3rp",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/fahimfaysalsiyam/Desktop/client/src/index.js",[],[],"/Users/fahimfaysalsiyam/Desktop/client/src/App.js",["13","14","15"],[],"import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Button, Container, Card, Row } from 'react-bootstrap'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props),\n      this.state = {\n        setBookName: '',\n        setReview: '',\n        fetchData: [],\n        reviewUpdate: ''\n      }\n  }\n\n  handleChange = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value\n    this.setState({\n      [nam]: val\n    })\n  }\n\n  handleChange2 = (event) => {\n    this.setState({\n      reviewUpdate: event.target.value\n    })\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/get\")\n      .then((response) => {\n        this.setState({\n          fetchData: response.data\n        })\n      })\n  }\n\n  submit = () => {\n    axios.post('/api/insert', this.state)\n      .then(() => { alert('success post') })\n    console.log(this.state)\n    document.location.reload();\n  }\n\n  delete = (id) => {\n    if (confirm(\"Do you want to delete? \")) {\n      axios.delete(`/api/delete/${id}`)\n      document.location.reload()\n    }\n  }\n\n  edit = (id) => {\n    axios.put(`/api/update/${id}`, this.state)\n    document.location.reload();\n  }\n\n\n  render() {\n    let card = this.state.fetchData.map((val, key) => {\n      return (\n        <React.Fragment>\n          <Card style={{ width: '18rem' }} className='m-2'>\n            <Card.Body>\n              <Card.Title>{val.book_name}</Card.Title>\n              <Card.Text>\n                {val.book_review}\n              </Card.Text>\n              <input name='reviewUpdate' onChange={this.handleChange2} placeholder='Update Review' ></input>\n              <Button className='m-2' onClick={() => { this.edit(val.id) }}>Update</Button>\n              <Button onClick={() => { this.delete(val.id) }}>Delete</Button>\n            </Card.Body>\n          </Card>\n        </React.Fragment>\n      )\n    })\n\n    return (\n      <div className='App'>\n        <h1>Dockerized Fullstack React Application</h1>\n        <div className='form'>\n          <input name='setBookName' placeholder='Enter Book Name' onChange={this.handleChange} />\n          <input name='setReview' placeholder='Enter Review' onChange={this.handleChange} />\n        </div>\n        <Button className='my-2' variant=\"primary\" onClick={this.submit}>Submit</Button> <br /><br />\n        <Container>\n          <Row>\n            {card}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;\n",{"ruleId":"16","severity":2,"message":"17","line":9,"column":5,"nodeType":"18","messageId":"19","endLine":15,"endColumn":8},{"ruleId":"20","severity":1,"message":"21","line":9,"column":17,"nodeType":"22","messageId":"23","endLine":9,"endColumn":18},{"ruleId":"24","severity":2,"message":"25","line":49,"column":9,"nodeType":"26","messageId":"27","endLine":49,"endColumn":16},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-restricted-globals","Unexpected use of 'confirm'.","Identifier","defaultMessage"]